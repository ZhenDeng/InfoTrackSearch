!function (t) { function a(a, e) { e = e || 1e3, setTimeout(function () { var e = t("#" + a.attr("data-validator")), i = a.attr("data-type"), o = a.attr("data-direction"), r = a.attr("data-distance"); "confirm" !== i || "left" !== o && "right" !== o ? e.hide({ effect: "drop", direction: o, duration: 500, easing: "easeInBack", complete: function () { e.remove(), a.removeAttr("data-validator"), a.removeAttr("data-type"), a.removeAttr("data-direction"), a.removeAttr("data-distance"), "undefined" != typeof validatorInterval && clearInterval(validatorInterval) }, distance: r }) : e.fadeOut(200), t(".modal-background").remove() }, e) } t.fn.showValidator = function (a, e, o, r, s, d, n, c, l) { if (void 0 !== this) { d = d || 3e3; var f = t(this); "error" !== (e = t.trim((e || "error").toLowerCase())) && "success" !== e && "warning" !== e && "confirm" !== e && (e = "error"), "top" !== (o = t.trim((o || "right").toLowerCase())) && "right" !== o && "bottom" !== o && "left" !== o && (o = "right"), r = r || !1, s = s || !1, "input" !== f.prop("tagName").toLowerCase() && (s = !1); var h = "right", u = "validatorContainer-" + t(this).attr("id"), v = t("#" + u), p = ""; if ("confirm" === e) { n = n || ""; var m = u.replace("-", "_") + "_callback"; for (window[m] = n, l = l || ["Yes", "No"], p = '<br /><div style="text-align:middle; padding-top: 10px;">', i = 0; i < l.length; i++)p += '<div class="button button-light button-tiny validator-confirm" data-callback="' + m + '" data-origin="' + f.attr("id") + '">' + l[i] + "</div>&nbsp;&nbsp;"; p = p.slice(0, -12) + "</div>", "dark" !== (c = c || "dark") && "light" !== c && (c = "dark"), modalBackground = t('<div class="modal-background ' + c + '"></div>'), s = !0, t("body").append(modalBackground) } v = t('<div id="' + u + '" class="validator-container"><div class="validator-new">' + a + p + "</div></div"), t("body").append(v), f.attr("data-validator", u); var g = t("#" + u + " > .validator-new"); switch (e) { case "error": g.addClass("validator-red"); break; case "success": g.addClass("validator-green"); break; case "warning": g.addClass("validator-orange"); break; case "confirm": g.addClass("validator-red") }var b = "", k = "easeOutBounce"; switch (o) { case "top": h = "up", g.outerWidth(t(this).outerWidth()), v.css("left", t(this).offset().left), r ? v.css("top", t(this).offset().top - v.outerHeight() - 8) : v.css("top", t(this).offset().top - v.outerHeight() + 1), k = "easeOutElastic"; break; case "bottom": h = "down", g.outerWidth(t(this).outerWidth()), v.css("left", t(this).offset().left), r ? v.css("top", t(this).offset().top + t(this).outerHeight() + 8) : v.css("top", t(this).offset().top + t(this).outerHeight() - 1), b = "10px", k = "easeOutElastic"; break; case "left": h = "left", g.outerWidth(v.outerWidth() + 16), r ? v.css("left", t(this).offset().left - v.outerWidth() - 8) : v.css("left", t(this).offset().left - v.outerWidth() + 1), v.css("top", t(this).offset().top + (t(this).outerHeight() - v.outerHeight()) / 2); break; default: g.outerWidth(v.outerWidth() + 16), "file" === f.attr("type") ? v.css("left", t(this).offset().left + 190) : r ? v.css("left", t(this).offset().left + t(this).outerWidth() + 8) : v.css("left", t(this).offset().left + t(this).outerWidth() - 1), v.css("top", t(this).offset().top + (t(this).outerHeight() - v.outerHeight()) / 2), b = "50px" }f.attr("data-type", e), f.attr("data-direction", h), f.attr("data-distance", b); var w = function () { clearInterval(W), f.removeAttr("data-validator"), f.removeAttr("data-type"), f.removeAttr("data-direction"), f.removeAttr("data-distance"), v.remove() }, y = d + 200 * t(".validator-container:visible").length; g.addClass("validator-" + o), "confirm" !== e || "left" !== h && "right" !== h ? v.show({ effect: "drop", direction: h, duration: 1e3, easing: k, distance: b }) : "left" === h ? v.css("display", "block").css("left", parseFloat(v.css("left")) - 10 + "px").animate({ left: "+=10", opacity: 1 }, 500, "easeOutExpo") : v.css("display", "block").css("left", parseFloat(v.css("left")) + 10 + "px").animate({ left: "-=10", opacity: 1 }, 500, "easeOutExpo"); var W = setInterval(function () { t(".validator-container").each(function () { var a = t(this).attr("id"); t('[data-validator="' + a + '"]').is(":visible") || (clearInterval(W), t(this).remove()) }) }, 100); s || setTimeout(function () { v.is(":visible") && ("confirm" !== e || "left" !== h && "right" !== h ? v.hide({ effect: "drop", direction: h, duration: 500, easing: "easeInBack", complete: w, distance: b }) : v.fadeOut(200)) }, y) } }, t.fn.hideValidator = function (e) { a(t(this), e) }, t(function () { t(document).on("click", ".validator-confirm", function () { var e = t(this).attr("data-callback"); a(t("#" + t(this).attr("data-origin")), 0), window[e](t(this).text()) }), t(document).on("click", "input[data-validator]", function () { a(t(this)) }), t(document).on("keypress", "input[data-validator]", function () { a(t(this)) }) }) }($);